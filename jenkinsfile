pipeline {
	agent none
	stages {
		stage('Build - test') {
			agent {
				docker {
                    image 'maven:latest'
					// TODO some cache to avoid npm sintall on every execution?
				}
			}
			steps {
				sh 'echo "Building! new"'
				//sh 'npm install --prefix src'
				sh 'mvn test'
			}
		}
		stage('Image creation') {
			agent any
			steps {
				// The Dockerfile.artifact copies the code into the image and run the jar generation.
				echo 'Creating the image...'

				// This will search for a Dockerfile.artifact in the working directory and build the image to the local repository
				sh "docker build -t \"ditas/SecureService\" -f Dockerfile.artifact ."
				echo "Done"
				echo 'Retrieving Docker Hub password from /opt/ditas-docker-hub.passwd...'

				// Get the password from a file. This reads the file from the host, not the container. Slaves already have the password in there.
				script {
					password = readFile '/opt/ditas-docker-hub.passwd'
				}
				echo "Done"
				echo 'Login to Docker Hub as ditasgeneric...'
				sh "docker login -u ditasgeneric -p ${password}"
				echo "Done"
				echo "Pushing the image ditas/data-utility-resolution-engine:latest..."
				sh "docker push ditas/data-utility-resolution-engine:latest"
				echo "Done "
			}
		}
		stage('Image deploy') {
			agent any
			options {
                // Don't need to checkout Git again
                skipDefaultCheckout true
            }
			steps {
				// Deploy to Staging environment calling the deployment script
				sh './jenkins/deploy-staging.sh'
			}
		}
	}
}